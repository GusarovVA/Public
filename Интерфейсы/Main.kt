fun main() {
        //Задание 1. Написать абстрактный класс «Службы экстренного реагирования». У него есть свой конструктор, содержащий свойства name и phone. Он содержит функцию, характеризующий его деятельность. Напишите интерфейс, который содержит функцию getDescription, дающую описание той или иной службы или организации.
        println("Задание 1")
        val скорая = Скорая("Скорая медицинская помощь", "103")
        скорая.getDescription()
        скорая.activity()
        println("------------------------------------------------------------------------------------------------------")

        val полиция = Полиция("Дежурная часть УМВД", "102")
        полиция.getDescription()
        полиция.activity()
        println("------------------------------------------------------------------------------------------------------")

        val мчс = МЧС("Пожарная часть МЧС", "101")
        мчс.getDescription()
        мчс.activity()
        println("------------------------------------------------------------------------------------------------------")

        println("При звонке на номер 112, обращение будет переадресовано в одну из вышеуказанных служб")
        println("------------------------------------------------------------------------------------------------------")

        //Задание 2. Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида: НОД(A,B) = НОД(B, A mod B), если B≠0; НОД(A, 0) = A.
        println("Задание 2")
        fun НОД(a: Int, b: Int): Int {
                if (b == 0) {
                        return a
                } else {
                        return НОД(b, a % b)
                }
        }

        val a1 = 48
        val b1 = 18
        println("Наибольший общий делитель для $a1 и $b1 равен: ${НОД(a1, b1)}")
        println("------------------------------------------------------------------------------------------------------")
        //Задание 3. Дан набор целых чисел. Найти второе максимальное число.
        println("Задание 3")
        fun findSecondMax(numbers: IntArray): Int? {
                if (numbers.size < 2) {
                        return null // No second max if less than 2 elements
                }

                var max1 = Int.MIN_VALUE
                var max2 = Int.MIN_VALUE

                for (num in numbers) {
                        if (num > max1) {
                                max2 = max1
                                max1 = num
                        } else if (num > max2 && num < max1) {
                                max2 = num
                        }
                }

                return if (max2 == Int.MIN_VALUE) null else max2
        }

        val nums1 = intArrayOf(1, 5, 2, 8, 3)
        println("Второе максимальное число: ${findSecondMax(nums1)}")
}